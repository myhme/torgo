#!/command/with-contenv bash
set -e
# This script only runs if the transparent proxy mode is enabled.
if [ "${TORGO_TRANSPARENT_PROXY}" != "true" ]; then
    exit 0
fi

echo "--- S6 Init: Enabling Transparent Proxy Mode ---"
iptables -t nat -F
iptables -t nat -N TOR_REDIR || true
DNSPort=${COMMON_DNS_PROXY_PORT:-5300}
ipctbl_has_owner=$(lsmod 2>/dev/null | grep -c xt_owner || true)
iptables -t nat -A TOR_REDIR -p udp --dport 53 -j REDIRECT --to-ports "${DNSPort}"
iptables -t nat -A TOR_REDIR -p tcp --dport 53 -j REDIRECT --to-ports "${DNSPort}"
HTTPPort=${PRIVOXY_HTTP_PORT:-8118}
iptables -t nat -A TOR_REDIR -p tcp --syn -j REDIRECT --to-ports "${HTTPPort}"
iptables -t nat -A PREROUTING -j TOR_REDIR

# Egress lockdown: allow loopback and Tor daemon user; drop everything else
# Note: Best-effort; if xt_owner is unavailable, we still restrict to loopback.
echo "S6 Init: Applying egress lockdown (loopback + _tor user only)."
iptables -P OUTPUT DROP || true
iptables -A OUTPUT -o lo -j ACCEPT
iptables -A OUTPUT -d 127.0.0.0/8 -j ACCEPT
if id -u _tor >/dev/null 2>&1; then
  iptables -A OUTPUT -m owner --uid-owner _tor -j ACCEPT 2>/dev/null || true
fi

echo "S6 Init: iptables rules configured for transparent redirection and egress lockdown."
