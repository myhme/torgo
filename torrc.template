# Tor Configuration Template for torgo instances

# --- Core Networking ---
# Placeholders may be either "<port>" or "<ip>:<port>". For backend instances, use
# 127.0.0.1:<port> to keep them local-only.
SocksPort __SOCKSPORT__
ControlPort __CONTROLPORT__
DNSPort __DNSPORT__

# --- Paths ---
DataDirectory __DATADIR__
PidFile __PIDFILE__

# Client-only behavior (usually default if no relay ports are open)
ClientOnly 1

SafeLogging 1 # Scrubs IPs from logs

# --- Hardening ---
SafeSocks 1
TestSocks 1
AvoidDiskWrites 1
Log notice stdout

# --- Access Policies ---
# Allow local applications and LAN clients only.
# Set __LAN_CIDR__ to a CIDR (e.g., 10.10.1.0/24) via environment/template substitution.
SocksPolicy accept 127.0.0.1
SocksPolicy accept __LAN_CIDR__
SocksPolicy reject *

# --- Front-end Access Guidance ---
# Recommended: keep backend Tor listeners (SocksPort, DNSPort, ControlPort) bound to 127.0.0.1.
# Expose only torgo's unified front-end SOCKS/DNS to the network.
# If you must expose a Tor SOCKS for clients on __LAN_CIDR__, add via __EXTRA_TOR_OPTIONS__:
#   SocksPort __LAN_BIND_IP__:9150
#   # where __LAN_BIND_IP__ is your WG interface IP (e.g., 10.10.1.x)
# Existing SocksPolicy rules (127.0.0.1 and __LAN_CIDR__) will restrict access.
# Do NOT expose ControlPort; optionally use a UNIX control socket instead:
#   ControlSocket /run/torgo/tor-__INSTANCE__.sock GroupWritable
#   CookieAuthFileGroupReadable 1

# --- Security & Control ---
# Enable control port and cookie authentication
CookieAuthentication 1
# This placeholder allows for optional, user-defined Tor settings
__EXTRA_TOR_OPTIONS__